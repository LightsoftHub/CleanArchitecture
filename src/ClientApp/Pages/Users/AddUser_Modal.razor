<MudDialog>
    <DialogContent>

        <EditForm Model="@newUser" method="post" OnValidSubmit=OnSubmit FormName="createForm">

            <DataAnnotationsValidator />

            <div class="row mb-3">
                <div class="col">
                    <MudTextField @bind-Value=newUser.UserName Label="Username" Required=true TextChanged=SearchUserDomain />
                </div>
                <div class="col">
                    <MudTextField @bind-Value=newUser.Password InputType="InputType.Password" Label="Password" />
                </div>
            </div>

            <div class="row mb-3">
                <div class="col">
                    <MudTextField @bind-Value=newUser.FirstName Label="FirstName" />
                </div>
                <div class="col">
                    <MudTextField @bind-Value=newUser.LastName Label="LastName" />
                </div>
            </div>

            <div class="row mb-3">
                <div class="col">
                    <MudTextField @bind-Value=newUser.Email Label="Email" />
                </div>
            </div>

            <div class="row mb-3">
                <div class="col">
                    <MudTextField @bind-Value=newUser.PhoneNumber Label="PhoneNumber" />
                </div>
                <div class="col">
                    <MudCheckBox @bind-Value=newUser.UseDomainPassword Label="AD Password" />
                </div>
            </div>

        </EditForm>

    </DialogContent>

    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="OnSubmit">Save</MudButton>
    </DialogActions>

</MudDialog>

@code {
    [CascadingParameter]
    public IMudDialogInstance MudDialog { get; set; } = default!;

    private CreateUserRequest newUser = new();

    private async Task SearchUserDomain()
    {
        var username = newUser.UserName;

        if (string.IsNullOrEmpty(username))
            return;

        var getDomainUser = await UserService.GetDomainUserAsync(username);

        if (getDomainUser.Succeeded)
        {
            newUser.FirstName = getDomainUser.Data.FirstName;
            newUser.LastName = getDomainUser.Data.LastName;
            newUser.Email = getDomainUser.Data.Email;
            newUser.PhoneNumber = getDomainUser.Data.PhoneNumber;
            newUser.UseDomainPassword = true;
        }
    }

    private async Task OnSubmit()
    {
        var result = await CallGuarded.ExecuteAsync(() => UserService.CreateAsync(newUser), $"New user {newUser.UserName} created");

        if (result.Succeeded)
            MudDialog.Close(DialogResult.Ok(result));
    }
}
